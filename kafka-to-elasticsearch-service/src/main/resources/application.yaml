spring:
  config:
    name: kafka-to-elasticsearch-service

server:
  port: 8182

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include:
          - info
          - beans
  endpoint:
    beans:
      enabled: true
    info:
      enabled: true
  info:
    build:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

kafka-configuration:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  number-of-partitions: 3
  replication-factor: 3

kafka-consumer:
  key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  consumer-group-id: twitter-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-start-up: false # the check and start logic is in startListening method
  concurrency-level: 3
  session-timeout: 10000
  heartbeat-interval: 3000
  max-poll-interval: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout: 150
