spring:
  config:
    name: twitter-to-kafka-service

twitter-to-kafka-service:
  twitter-keywords:
    - Kotlin
    - Microservices
    - Kafka
    - Elasticsearch
    - Messi
  enable-mock-tweets: false
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 10000
  enable-feign-tweets: false
  enable-v2-tweets: true
  twitter-base-url: https://api.twitter.com
  twitter-tweet-url: /2/tweets/search/stream?tweet.fields=created_at&expansions=author_id
  twitter-rules-url: /2/tweets/search/stream/rules
  twitter-bearer-token: ${TWITTER_BEARER_TOKEN}
  twitter-tweets-limit: 0
  kafka-initialization-programmatically: false

kafka-configuration:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  number-of-partitions: 3
  replication-factor: 3

kafka-producer:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  ack: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger: 5
  request-timeout: 60000
  retry-count: 5

retry-configuration:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2
  max-attempts: 3
  sleep-time-ms: 2000
